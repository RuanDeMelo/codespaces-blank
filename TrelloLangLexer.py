# Generated from TrelloLang.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,143,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,
        2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,
        7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,
        1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,14,1,14,
        1,15,4,15,119,8,15,11,15,12,15,120,1,16,4,16,124,8,16,11,16,12,16,
        125,1,17,1,17,5,17,130,8,17,10,17,12,17,133,9,17,1,17,1,17,1,18,
        4,18,138,8,18,11,18,12,18,139,1,18,1,18,1,131,0,19,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,1,0,3,1,0,48,57,3,0,48,57,65,90,97,122,3,0,
        9,10,13,13,32,32,146,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
        0,0,1,39,1,0,0,0,3,45,1,0,0,0,5,53,1,0,0,0,7,59,1,0,0,0,9,65,1,0,
        0,0,11,72,1,0,0,0,13,78,1,0,0,0,15,85,1,0,0,0,17,90,1,0,0,0,19,97,
        1,0,0,0,21,100,1,0,0,0,23,103,1,0,0,0,25,107,1,0,0,0,27,113,1,0,
        0,0,29,115,1,0,0,0,31,118,1,0,0,0,33,123,1,0,0,0,35,127,1,0,0,0,
        37,137,1,0,0,0,39,40,5,67,0,0,40,41,5,82,0,0,41,42,5,73,0,0,42,43,
        5,65,0,0,43,44,5,82,0,0,44,2,1,0,0,0,45,46,5,77,0,0,46,47,5,79,0,
        0,47,48,5,83,0,0,48,49,5,84,0,0,49,50,5,82,0,0,50,51,5,65,0,0,51,
        52,5,82,0,0,52,4,1,0,0,0,53,54,5,77,0,0,54,55,5,79,0,0,55,56,5,86,
        0,0,56,57,5,69,0,0,57,58,5,82,0,0,58,6,1,0,0,0,59,60,5,66,0,0,60,
        61,5,79,0,0,61,62,5,65,0,0,62,63,5,82,0,0,63,64,5,68,0,0,64,8,1,
        0,0,0,65,66,5,66,0,0,66,67,5,79,0,0,67,68,5,65,0,0,68,69,5,82,0,
        0,69,70,5,68,0,0,70,71,5,83,0,0,71,10,1,0,0,0,72,73,5,76,0,0,73,
        74,5,73,0,0,74,75,5,83,0,0,75,76,5,84,0,0,76,77,5,65,0,0,77,12,1,
        0,0,0,78,79,5,76,0,0,79,80,5,73,0,0,80,81,5,83,0,0,81,82,5,84,0,
        0,82,83,5,65,0,0,83,84,5,83,0,0,84,14,1,0,0,0,85,86,5,67,0,0,86,
        87,5,65,0,0,87,88,5,82,0,0,88,89,5,68,0,0,89,16,1,0,0,0,90,91,5,
        82,0,0,91,92,5,69,0,0,92,93,5,80,0,0,93,94,5,73,0,0,94,95,5,84,0,
        0,95,96,5,65,0,0,96,18,1,0,0,0,97,98,5,65,0,0,98,99,5,79,0,0,99,
        20,1,0,0,0,100,101,5,78,0,0,101,102,5,79,0,0,102,22,1,0,0,0,103,
        104,5,75,0,0,104,105,5,69,0,0,105,106,5,89,0,0,106,24,1,0,0,0,107,
        108,5,84,0,0,108,109,5,79,0,0,109,110,5,75,0,0,110,111,5,69,0,0,
        111,112,5,78,0,0,112,26,1,0,0,0,113,114,5,123,0,0,114,28,1,0,0,0,
        115,116,5,125,0,0,116,30,1,0,0,0,117,119,7,0,0,0,118,117,1,0,0,0,
        119,120,1,0,0,0,120,118,1,0,0,0,120,121,1,0,0,0,121,32,1,0,0,0,122,
        124,7,1,0,0,123,122,1,0,0,0,124,125,1,0,0,0,125,123,1,0,0,0,125,
        126,1,0,0,0,126,34,1,0,0,0,127,131,5,34,0,0,128,130,9,0,0,0,129,
        128,1,0,0,0,130,133,1,0,0,0,131,132,1,0,0,0,131,129,1,0,0,0,132,
        134,1,0,0,0,133,131,1,0,0,0,134,135,5,34,0,0,135,36,1,0,0,0,136,
        138,7,2,0,0,137,136,1,0,0,0,138,139,1,0,0,0,139,137,1,0,0,0,139,
        140,1,0,0,0,140,141,1,0,0,0,141,142,6,18,0,0,142,38,1,0,0,0,5,0,
        120,125,131,139,1,6,0,0
    ]

class TrelloLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    CRIAR = 1
    MOSTRAR = 2
    MOVER = 3
    BOARD = 4
    BOARDS = 5
    LISTA = 6
    LISTAS = 7
    CARD = 8
    REPITA = 9
    AO = 10
    NO = 11
    KEY = 12
    TOKEN = 13
    APAR = 14
    FPAR = 15
    NUM = 16
    ID = 17
    STRING = 18
    PULAR = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'CRIAR'", "'MOSTRAR'", "'MOVER'", "'BOARD'", "'BOARDS'", "'LISTA'", 
            "'LISTAS'", "'CARD'", "'REPITA'", "'AO'", "'NO'", "'KEY'", "'TOKEN'", 
            "'{'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "CRIAR", "MOSTRAR", "MOVER", "BOARD", "BOARDS", "LISTA", "LISTAS", 
            "CARD", "REPITA", "AO", "NO", "KEY", "TOKEN", "APAR", "FPAR", 
            "NUM", "ID", "STRING", "PULAR" ]

    ruleNames = [ "CRIAR", "MOSTRAR", "MOVER", "BOARD", "BOARDS", "LISTA", 
                  "LISTAS", "CARD", "REPITA", "AO", "NO", "KEY", "TOKEN", 
                  "APAR", "FPAR", "NUM", "ID", "STRING", "PULAR" ]

    grammarFileName = "TrelloLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


